name: CI Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  backend-ci:
    name: Run Tests, Lint, Coverage, Docker Build
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'  # ‚ö†Ô∏è or 3.10 ‚Äî match your project

      # 3Ô∏è‚É£ Set up caching (optional but smart)
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}

      # 4Ô∏è‚É£ Install dependencies
      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      # 5Ô∏è‚É£ Run tests with pytest
      - name: Run tests
        run: |
          pytest --tb=short

      # 6Ô∏è‚É£ (Optional) Run linting ‚Äî ruff or black
      - name: Lint with ruff
        run: |
          pip install ruff
          ruff . --exit-zero  # or remove `--exit-zero` to fail on lint error

      # 7Ô∏è‚É£ (Optional) Check formatting with black
      - name: Check formatting with black
        run: |
          pip install black
          black --check .

      # 8Ô∏è‚É£ (Optional) Run coverage
      - name: Run coverage
        run: |
          pip install pytest-cov
          pytest --cov=app/backend

      # 9Ô∏è‚É£ Build Docker image
      - name: Build Docker image
        run: |
          docker build -t unwatched-backend .

      # üîü (Optional) Run smoke test inside container
      # Can skip unless you want this
      - name: Smoke test container
        run: |
          docker run -d -p 8000:8000 --name test_backend unwatched-backend
          sleep 5
          curl --fail http://localhost:8000/docs || exit 1
